apiVersion: hub.mydecisive.ai/v1
kind: MdaiHub
metadata:
  labels:
    app.kubernetes.io/name: mdai-operator
    app.kubernetes.io/managed-by: kustomize
  name: mdaihub-compliance
  namespace: mdai
spec:
  variables:
  evaluations:
  observers:
    # name required. must be unique across observers
    - name: observer-data-in
      # resourceRef correctly maps the observers to their observer resource
      resourceRef: observer-collector
      # labelResourceAttributes keys on the telemetry records being observed. These keys will be used in groupbyattrs processor to group the telemetry records before calculating metrics.
      labelResourceAttributes:
        - mdai_service
      # countMetricName if populated, designates the name of the metric in prometheus that represents the count of indicated telemetry
      countMetricName: items_received_by_service_total
      # bytesMetricName if populated, designates the name of the metric in prometheus that represnets the calculated size in bytes of the indicated telemetry
      bytesMetricName: bytes_received_by_service_total
      # filter Optional. config for an opentelemetry filter processor
      filter:
        error_mode: ignore
        logs:
          log_record:
            - 'resource.attributes["observer_direction"] != "received"'
    - name: observer-data-out
      resourceRef: observer-collector
      labelResourceAttributes:
        - mdai_service
      countMetricName: items_sent_by_service_total
      bytesMetricName: bytes_sent_by_service_total
      filter:
        error_mode: ignore
        logs:
          log_record:
            - 'resource.attributes["observer_direction"] != "exported"'

  observerResources:
    - name: observer-collector
      image: public.ecr.aws/decisiveai/watcher-collector:0.1.4
      replicas: 3
      resources:
        limits:
          memory: "512Mi"
          cpu: "200m"
        requests:
          memory: "128Mi"
          cpu: "100m"
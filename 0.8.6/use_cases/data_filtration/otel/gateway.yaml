apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  labels:
    mydecisive.ai/hub-name: mdaihub-sample
  name: gateway
  namespace: mdai
spec:
  managementState: managed

  # Recommended: use a build that supports `service.telemetry.metrics.readers`
  image: otel/opentelemetry-collector-contrib:0.136.0
  upgradeStrategy: none

  replicas: 1
  resources:
    limits:
      memory: "256Mi"
      cpu: "200m"
    requests:
      memory: "128Mi"
      cpu: "100m"

  # Keep your configmap-based variables
  envFrom:
    - configMapRef:
        name: mdaihub-sample-variables

  # Provide MY_POD_IP via the Downward API
  env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP

  # Prevent Operator from injecting legacy metrics.address wiring
  observability:
    metrics:
      enableMetrics: false

  config:
    receivers:
      fluentforward:
        endpoint: "0.0.0.0:8006"

    extensions:
      # Use default-value syntax with ":-"
      health_check:
        endpoint: "${env:MY_POD_IP:-0.0.0.0}:13133"

    processors:
      memory_limiter:
        check_interval: 23s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 1000
        send_batch_max_size: 10000
        timeout: 13s

    exporters:
      debug: {}

    service:
      telemetry:
        logs:
          level: info
        metrics:
          level: normal
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: 0.0.0.0
                    port: 8888

      extensions: [health_check]

      pipelines:
        logs/customer_pipeline:
          receivers: [fluentforward]
          processors: [memory_limiter, batch]
          exporters: [debug]
